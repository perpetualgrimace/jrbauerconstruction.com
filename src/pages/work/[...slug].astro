---
import { getCollection } from 'astro:content';

import Layout from '../../layouts/Layout.astro';
import Bullet from '../../components/icons/bullet.svg.astro';
import JobGallery from '../../components/JobGallery.astro';
import JobNav from '../../components/JobNav.astro';

export async function getStaticPaths() {
  const workEntries = await getCollection('work');
  const workCount = workEntries.length;

  return workEntries.map((job, i) => ({
    params: { slug: job.slug },
    props: {
      job,
      prevJob: i === 0
        ? workEntries[[workCount - 1]]
        : workEntries[i - 1],
      nextJob: i === workCount - 1
          ? workEntries[0]
          : workEntries[i + 1]
    },
  }));
}

const { job, prevJob, nextJob } = Astro.props;
const { slug } = job;
const { title, location, year, images } = job.data;
const { Content } = await job.render();

const heroProps = {
  headline: title,
  subhead: location,
  textOnly: true
}
---

<Layout slug={slug} title={title} heroProps={heroProps}>
  <section class="job">
    <JobGallery images={images} slug={slug}  />

    <div class="job-description">
      <!-- <p class="job-meta u-mb-lg">
        <span class="job-meta-location">{location}</span>
        <Bullet />
        <span class="job-meta-year">{year}</span>
      </p>

      <div class="job-description-content">
        <Content />
      </div> -->

      <h2 class="job-more-heading">More work</h2>

      <JobNav
        prevSlug={prevJob.slug}
        prevTitle={prevJob.data.title}
        nextSlug={nextJob.slug}
        nextTitle={nextJob.data.title}
      />
    </div>
  </section>
</Layout>

<style is:global lang="scss">
	@import '../../styles/global';

  .job {
    display: flex;
    flex-wrap: wrap;
    width: 800px;
    max-width: calc(100% - #{$sp-xxl});
    padding: $sp-md $sp-md $sp-sm $sp-md;
    margin-top: -$sp-xxl*2;
    background-image: radial-gradient(at top left, $navy-medium, $navy-dark 100%);
    border-radius: $radius-lg;
  }

  // @media (max-width: 699px) {
    .job-gallery {
      width: 100%;
      order: -1;
      // margin-bottom: $sp-lg;
    }
  // }
  // @media (min-width: 700px) {
  //   .job-description {
  //     flex: 1 0 33.333%;
  //     margin-right: $sp-xl;
  //   }
  //   .job-gallery {
  //     flex: 1 0 calc(66.666% - #{$sp-xl});
  //   }
  // }

  .job-meta {
    display: flex;
    flex-wrap: wrap;
    align-items: center;

    & > *:not(:last-child) {
      margin-right: 1em;
    }
  }

  .job-more-heading {
    margin-top: $sp-xl;
    margin-bottom: $sp-xs;
  }

  .job-description-content > * {
    @include font-md;
    line-height: 1.625;

    &:not(:last-child) {
      margin-bottom: $sp-sm;
    }
  }

  @media (min-width: 1080px) {
    // .job-main-img-list {
    //   margin: -$sp-md;
    // }
    // .job-select-img-list {
    //   flex-direction: column;
    //   position: absolute;
    //   left: -$sp-xxl * 2.375;
    //   top: -$sp-md;
    // }
    .job-description {
      text-align: center;
      width: 100%;
      margin-top: -$sp-md;
      margin-bottom: -$sp-md;
    }
  }
</style>