---
const { images, slug } = Astro.props;

import RetinaImg from "./RetinaImg.astro";
---

<div class="job-gallery">
  {images &&
    <ul class="job-main-img-list u-mb-md">
      {images.map((img, i) => (
        <li class="job-main-img-item" data-index={i} style={i !== 0 ? "display: none;" : ""}>
          <RetinaImg className="job-main-img" file={`work/${slug}/${img}`} extension="jpg" alt={`Project image #${i + 1}`} />
        </li>
      ))}
    </ul>
  }

  {images && images.length > 1 &&
    <ul class="job-select-img-list">
    {images.map((img, i) => (
        <li class="job-select-img-item">
          <button class="job-select-img-button" data-index={i} aria-pressed={i === 0}>
            <span class="u-visually-hidden">View project image #{i + 1}</span>
            <RetinaImg className="job-select-img" file={`work/${slug}/${img}`} extension="jpg" at1x="@0.5x" at2x="" />
          </button>
        </li>
      ))}
    </ul>
  }
</div>

<style is:global lang="scss">
	@import '../styles/global';

  .job-main-img-list {
    overflow: hidden;
    border-radius: $radius-md;
    padding-top: 75%;
  }
  .job-main-img-item {
    @include absolute-expand;
  }
  .job-main-img {
    width: 100%;
    object-fit: cover;
  }

  .job-select-img-list {
    display: flex;
    flex-wrap: nowrap;
    overflow-x: auto;
  }
  .job-select-img-item {
    flex: 0 0 auto;
  }
  .job-select-img-item:not(:last-of-type) {
    margin-right: $sp-md;
  }
  .job-select-img-button {
    overflow: hidden;
    border-radius: $radius-sm;

    &:before {
      @include pseudo;
      @include absolute-expand;
      z-index: 2;
      border-radius: $radius-sm;
      border: $radius-md solid transparent;
      transition: border-color 0.2s ease-out;
    }

    &[aria-pressed]:before {
      border-color: $aqua;
    }

    &:not([aria-pressed]) .job-select-img {
      opacity: 0.5;
    }

    &[aria-pressed] .job-select-img,
    &:hover .job-select-img,
    &:focus .job-select-img {
      transform: scale(1.1);
      opacity: 1;
    }

    &:hover:before {
      border-color: $white;
    }
  }
  .job-select-img {
    width: 6rem;
    transform: scale(1.01);
    transition: opacity 0.2s ease-out, transform 0.2s ease-out;
  }
</style>

<script>
  let activeIndex = 0;

  const mainImages = document.querySelectorAll('.job-main-img-item[data-index]');
  const buttons = document.querySelectorAll('.job-select-img-button[data-index]');

  if (mainImages.length > 1) {
    buttons.forEach(button => {
      button.addEventListener('click', () => {
        const pressedIndex = button.attributes["data-index"].nodeValue;

        if (pressedIndex !== activeIndex) {
          activeIndex = button.attributes["data-index"].nodeValue;

          document.querySelector('.job-select-img-button[aria-pressed="true"]').removeAttribute("aria-pressed");
          button.setAttribute("aria-pressed", true);

          mainImages.forEach(img => {
            img.style.display = "none";

            if (img.attributes["data-index"].nodeValue === activeIndex) {
              img.style.display = "block";
            };
          });
        };
      });
    });
  }

</script>